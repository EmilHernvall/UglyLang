/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package se.c0la.uglylang;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ident = 7;
  /** RegularExpression Id. */
  int typename = 8;
  /** RegularExpression Id. */
  int name = 9;
  /** RegularExpression Id. */
  int nmstart = 10;
  /** RegularExpression Id. */
  int nonascii = 11;
  /** RegularExpression Id. */
  int unicode = 12;
  /** RegularExpression Id. */
  int escape = 13;
  /** RegularExpression Id. */
  int nmchar = 14;
  /** RegularExpression Id. */
  int num = 15;
  /** RegularExpression Id. */
  int string = 16;
  /** RegularExpression Id. */
  int stringchar = 17;
  /** RegularExpression Id. */
  int urlchar = 18;
  /** RegularExpression Id. */
  int nl = 19;
  /** RegularExpression Id. */
  int wc = 20;
  /** RegularExpression Id. */
  int w = 21;
  /** RegularExpression Id. */
  int IMPORT = 22;
  /** RegularExpression Id. */
  int EXPORT = 23;
  /** RegularExpression Id. */
  int UNPACK = 24;
  /** RegularExpression Id. */
  int AS = 25;
  /** RegularExpression Id. */
  int TYPEDECL = 26;
  /** RegularExpression Id. */
  int COMPOUNDTYPEDECL = 27;
  /** RegularExpression Id. */
  int SUBSCRIPT = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int XOR = 32;
  /** RegularExpression Id. */
  int IFSTMT = 33;
  /** RegularExpression Id. */
  int ELSEIFSTMT = 34;
  /** RegularExpression Id. */
  int ELSESTMT = 35;
  /** RegularExpression Id. */
  int WHILESTMT = 36;
  /** RegularExpression Id. */
  int RETURNSTMT = 37;
  /** RegularExpression Id. */
  int EQ = 38;
  /** RegularExpression Id. */
  int NOTEQ = 39;
  /** RegularExpression Id. */
  int GT = 40;
  /** RegularExpression Id. */
  int GTEQ = 41;
  /** RegularExpression Id. */
  int LT = 42;
  /** RegularExpression Id. */
  int LTEQ = 43;
  /** RegularExpression Id. */
  int ASSIGN = 44;
  /** RegularExpression Id. */
  int ADD = 45;
  /** RegularExpression Id. */
  int SUB = 46;
  /** RegularExpression Id. */
  int MUL = 47;
  /** RegularExpression Id. */
  int DIV = 48;
  /** RegularExpression Id. */
  int MOD = 49;
  /** RegularExpression Id. */
  int EXP = 50;
  /** RegularExpression Id. */
  int LPAR = 51;
  /** RegularExpression Id. */
  int RPAR = 52;
  /** RegularExpression Id. */
  int LCLAUSE = 53;
  /** RegularExpression Id. */
  int RCLAUSE = 54;
  /** RegularExpression Id. */
  int LBRACKET = 55;
  /** RegularExpression Id. */
  int RBRACKET = 56;
  /** RegularExpression Id. */
  int STMTBREAK = 57;
  /** RegularExpression Id. */
  int LISTSEP = 58;
  /** RegularExpression Id. */
  int KEYVALUESEP = 59;
  /** RegularExpression Id. */
  int TYPENAME = 60;
  /** RegularExpression Id. */
  int IDENT = 61;
  /** RegularExpression Id. */
  int STRING = 62;
  /** RegularExpression Id. */
  int NUMBER = 63;
  /** RegularExpression Id. */
  int WHITESPACE = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinCStyle = 1;
  /** Lexical state. */
  int WithinCPPStyle = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"/*\"",
    "\"//\"",
    "\"*/\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<ident>",
    "<typename>",
    "<name>",
    "<nmstart>",
    "<nonascii>",
    "<unicode>",
    "<escape>",
    "<nmchar>",
    "<num>",
    "<string>",
    "<stringchar>",
    "<urlchar>",
    "<nl>",
    "<wc>",
    "<w>",
    "\"import\"",
    "\"export\"",
    "\"unpack\"",
    "\"as\"",
    "\"type\"",
    "\"compound_type\"",
    "\".\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"xor\"",
    "\"if\"",
    "\"elif\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\":\"",
    "<TYPENAME>",
    "<IDENT>",
    "<STRING>",
    "<NUMBER>",
    "<WHITESPACE>",
  };

}
